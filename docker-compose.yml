services:
  nginx:
    container_name: free_vpn_bot_nginx
    image: nginx:1.25-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - free_vpn_bot   # ← именно так, без дефиса перед именем
       

    # импортируем переменные для шаблона
    env_file:
      - .env
    environment:
      # основной домен и (при ACME) webroot
      DOMAIN:               ${DOMAIN}
      # если будете через HTTP-01: 
      LOCATION:             ${SERVER_URL}
      # пути к сертификатам для ss.almet-sam.ru
      SS_CERT_FULLCHAIN_PATH: "/etc/nginx/certs/ss.fullchain.pem"
      SS_CERT_KEY_PATH:       "/etc/nginx/certs/ss.privkey.pem"

    volumes:
      # шаблон конфигурации
      - ./etc/nginx/templates/default.conf.template:/etc/nginx/conf.d/default.conf:ro
      # основной cert для host.almet-sam.ru
      - ./etc/nginx/certs/fullchain.pem:/etc/nginx/certs/fullchain.pem:ro
      - ./etc/nginx/certs/privkey.pem:/etc/nginx/certs/privkey.pem:ro
      # если ACME-челлендж:
      - ./certbot/data:/var/www/certbot
      # статика Marzban
      - ./volumes/marzban/static:/opt/telegram-vpn-bot/volumes/marzban/static:ro

  marzban:
    image: gozargah/marzban:latest
    container_name: free_vpn_bot_marzban
    restart: always
    env_file:
      - .env.marzban
    environment:
      UVICORN_HOST:       "0.0.0.0"
      UVICORN_PORT:       "8002"
      YOUR_DOMAIN:        ${DOMAIN}
      UVICORN_SSL_CERTFILE: "/etc/marzban/certs/fullchain.pem"
      UVICORN_SSL_KEYFILE:  "/etc/marzban/certs/privkey.pem"
      UVICORN_SSL_CA_TYPE:  "public"
      XRAY_LOCATION_ASSET: /opt/marzban/assets
    healthcheck:
      test: ["CMD-SHELL", "curl -sSf https://localhost:8002/api/system || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 5
    
    
    ports:
      - "1081:1081"
      - "127.0.0.1:8002:8002"
    networks:
      - free_vpn_bot
    volumes:
      - ./volumes/marzban:/var/lib/marzban
      - ./volumes/marzban/templates/subscription:/var/lib/marzban/templates/subscription:ro
      - ./xray_config.json:/opt/marzban/xray_config.json:ro
      # - ./volumes/xray_assets/geoip.dat:/opt/marzban/geoip.dat:ro
      # - ./volumes/xray_assets/geosite.dat:/opt/marzban/geosite.dat:ro
      - ./volumes/xray_assets:/opt/marzban/assets:ro
      - /etc/timezone:/etc/timezone:ro
      - ./certs/fullchain.pem:/etc/marzban/certs/fullchain.pem:ro
      - ./certs/privkey.pem:/etc/marzban/certs/privkey.pem:ro
    logging:
      driver: "json-file"
      options:
        max-size: "900k"
        max-file: "10"
  

  bot:
    build: .
    container_name: free_vpn_bot
    restart: always
    stop_signal: SIGINT
    ports:
      - "8443:8443"
    env_file:
      - .env
    networks:
      - free_vpn_bot
    volumes:
      - "./goods.json:/app/goods.json"
      - "./locales:/app/bot/locales"
    environment:
      BOT_TOKEN:           ${BOT_TOKEN}
      SHOP_NAME:           ${SHOP_NAME}
      PROTOCOLS:           ${PROTOCOLS}
      TEST_PERIOD:         ${TEST_PERIOD}
      PERIOD_LIMIT:        ${PERIOD_LIMIT}
      ABOUT:               ${ABOUT}
      RULES_LINK:          ${RULES_LINK}
      SUPPORT_LINK:        ${SUPPORT_LINK}
      DB_URL:              ${DB_URL}
      DB_NAME:             ${DB_NAME}
      DB_USER:             ${DB_USER}
      DB_PASS:             ${DB_PASS}
      DB_HOST:             ${DB_HOST}
      DB_PORT:             ${DB_PORT}
      PANEL_HOST:          ${PANEL_HOST}
      PANEL_GLOBAL:        ${PANEL_GLOBAL}
      PANEL_USER:          ${PANEL_USER}
      PANEL_PASS:          ${PANEL_PASS}
      MARZ_HAS_CERTIFICATE: ${MARZ_HAS_CERTIFICATE}
      WEBHOOK_URL:         ${WEBHOOK_URL}
      WEBHOOK_PORT:        ${WEBHOOK_PORT}
      RENEW_NOTIFICATION_TIME: ${RENEW_NOTIFICATION_TIME}


  db:
    image: mysql:8.0
    container_name: free_vpn_bot_db
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER:     ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - free_vpn_bot

volumes:
  db_data:
    driver: local

networks:
  free_vpn_bot:
    driver: bridge
