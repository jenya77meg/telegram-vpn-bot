#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è display_name –∏ telegram_username –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
"""

import asyncio
import sys
sys.path.append('./bot')

from db.models import VPNUsers
from db.methods import engine
from sqlalchemy import select, update
from sqlalchemy.ext.asyncio import create_async_engine

async def migrate_existing_users():
    """–û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    async with engine.connect() as conn:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ display_name
        sql_query = select(VPNUsers).where(
            (VPNUsers.display_name == "") | (VPNUsers.display_name.is_(None))
        )
        result = await conn.execute(sql_query)
        users = result.fetchall()
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        
        for user in users:
            # –°–æ–∑–¥–∞–µ–º display_name –Ω–∞ –æ—Å–Ω–æ–≤–µ tg_id
            display_name = f"ID: {user.tg_id}"
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            update_query = update(VPNUsers).where(
                VPNUsers.id == user.id
            ).values(
                display_name=display_name,
                telegram_username=""
            )
            
            await conn.execute(update_query)
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.tg_id} -> {display_name}")
        
        await conn.commit()
        print("‚ú® –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    asyncio.run(migrate_existing_users()) 